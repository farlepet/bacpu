COMM instruction
================

	The COMM instruction is used to communicate with peripherals. It handles
both input and output.


Instruction Info layout
-----------------------
[width="33%"]
|==================
| Direction (1 bit)
|==================

Direction
~~~~~~~~~
[width="33%",cols="^1,2",options="header"]
|==================
| Value | Direction
| 0     | Out
| 1     | In
|==================


Instruction Flow
----------------
    * Check both registers are valid
    ** False
    *** Increase PC
    *** Call exception
    * Set Selector lines to first 8 bits of first register (See peripheral.txt)
    * Bring Request line high (See peripheral.txt)
    * Check Direction bit
    ** Direction == 0
    *** Set Data lines to value in second register (See peripheral.txt)
    *** Create short delay
    ** Direction == 1
    *** Set Data lines to value 0xFFFFFFFF
    *** Create short delay
    *** Bring Request line low
    *** Create short delay
    *** Bring Request line high
    *** Copy value from Data to second register
    *** Create short delay
    * Bring Request line low
    * Clear Selector lines
    * Clear Data lines


Instruction Format
------------------
	* OpCode with two registers
	** First Register:  Device
	** Second Register: Value
